upstream gotcha-quiz {
  # for UNIX domain socket setups:
  server unix:/Users/leewangenheim/projects/gotcha-quiz/tmp/sockets/unicorn.sock;
}

server {
    listen 80;
    server_name gotcha-quiz.local; 
    root /Users/leewangenheim/projects/gotcha-quiz/public;
  
    client_max_body_size 4G;
    keepalive_timeout 5;
  
    location / {
      # an HTTP header important enough to have its own Wikipedia entry:
      #   http://en.wikipedia.org/wiki/X-Forwarded-For
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  
      # enable this if and only if you use HTTPS, this helps Rack
      # set the proper protocol for doing redirects:
      # proxy_set_header X-Forwarded-Proto https;
  
      # pass the Host: header from the client right along so redirects
      # can be set properly within the Rack application
      proxy_set_header Host $http_host;
  
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
  
      # set "proxy_buffering off" *only* for Rainbows! when doing
      # Comet/long-poll stuff.  It's also safe to set if you're
      # using only serving fast clients with Unicorn + nginx.
      # Otherwise you _want_ nginx to buffer responses to slow
      # clients, really.
      # proxy_buffering off;
  
      # Try to serve static files from nginx, no point in making an
      # *application* server like Unicorn/Rainbows! serve static files.
      if (!-f $request_filename) {
        proxy_pass http://gotcha-quiz;
        break;
      }
  
    # Rails error pages
    error_page 500 /500.html;
    error_page 504 /504.html;
    error_page 502 504 /502.html;
  }
}


